{
  "swaggerDefinition": {
    "openapi": "3.0.0",
    "info": {
      "title": "Swagger Employee",
      "description": "This is a sample Employee server.  You can find\nout more about Swagger at\n[http://swagger.io](http://swagger.io) or on\n[irc.freenode.net, #swagger](http://swagger.io/irc/).\n",
      "termsOfService": "http://swagger.io/terms/",
      "contact": {
        "email": "eirondiaz@gmail.com"
      },
      "license": {
        "name": "Apache 2.0",
        "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
      },
      "version": "1.0.0"
    },
    "externalDocs": {
      "description": "Find out more about Swagger",
      "url": "http://swagger.io"
    },
    "servers": [
      {
        "url": "https://bolsa-empleo-dr.herokuapp.com/",
        "description": "Employee API in production mode"
      },
      {
        "url": "http://localhost:8080",
        "description": "Employee API in development mode"
      }
    ],
    "tags": [
      {
        "name": "auth",
        "description": "Authenticate users",
        "externalDocs": {
          "description": "Find out more",
          "url": "http://swagger.io"
        }
      },
      {
        "name": "user",
        "description": "Operations about user"
      },
      {
        "name": "category",
        "description": "Operations about category"
      },
      {
        "name": "job",
        "description": "Operations about job"
      }
    ],
    "paths": {
      "/api/v1/auth/login": {
        "post": {
          "tags": [
            "auth"
          ],
          "summary": "Log in a user",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Auth"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "ok",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/inline_response_200"
                  }
                }
              }
            },
            "400": {
              "description": "incorrect password",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/ErrorResponse"
                    }
                  }
                }
              }
            },
            "404": {
              "description": "email invalid",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/ErrorResponse"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/auth/register": {
        "post": {
          "tags": [
            "auth"
          ],
          "summary": "register a user",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            },
            "required": true
          },
          "responses": {
            "201": {
              "description": "created",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/inline_response_201"
                  }
                }
              }
            },
            "400": {
              "description": "email already in use",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  }
                }
              }
            },
            "500": {
              "description": "server error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/category": {
        "get": {
          "tags": [
            "category"
          ],
          "summary": "Get all categories",
          "responses": {
            "200": {
              "description": "ok",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/inline_response_200_1"
                  }
                }
              }
            }
          }
        },
        "put": {
          "tags": [
            "category"
          ],
          "summary": "Update a category",
          "description": "This can only be done by the logged in user with role \"poster\" or \"admin\".",
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "description": "token",
              "required": true,
              "style": "simple",
              "explode": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Category"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "created",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/inline_response_200_2"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbbiden"
            },
            "404": {
              "description": "Category not found"
            }
          }
        },
        "post": {
          "tags": [
            "category"
          ],
          "summary": "Create a category",
          "description": "This can only be done by the logged in user with role \"poster\" or \"admin\".",
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "description": "token",
              "required": true,
              "style": "simple",
              "explode": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Category"
                }
              }
            },
            "required": true
          },
          "responses": {
            "201": {
              "description": "created",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/inline_response_200_2"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbbiden"
            }
          }
        }
      },
      "/api/v1/category/{title}": {
        "get": {
          "tags": [
            "category"
          ],
          "summary": "Get a single category",
          "parameters": [
            {
              "name": "title",
              "in": "path",
              "required": true,
              "style": "simple",
              "explode": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "ok",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/inline_response_200_3"
                  }
                }
              }
            }
          }
        },
        "delete": {
          "tags": [
            "category"
          ],
          "summary": "Delete a category",
          "description": "This can only be done by the logged in user with role \"poster\" or \"admin\".",
          "parameters": [
            {
              "name": "title",
              "in": "path",
              "required": true,
              "style": "simple",
              "explode": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "Authorization",
              "in": "header",
              "description": "token",
              "required": true,
              "style": "simple",
              "explode": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "ok",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/inline_response_200_3"
                  }
                }
              }
            },
            "403": {
              "description": "Forbbiden - Your role is not allowed to realize this operation."
            },
            "404": {
              "description": "Category not found"
            }
          }
        }
      },
      "/api/v1/job": {
        "get": {
          "tags": [
            "job"
          ],
          "summary": "Get all jobs",
          "parameters": [
            {
              "name": "limit",
              "in": "query",
              "description": "The numbers of items to return",
              "required": false,
              "style": "form",
              "explode": true,
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "page",
              "in": "query",
              "description": "The page",
              "required": false,
              "style": "form",
              "explode": true,
              "schema": {
                "type": "integer"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "ok",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/inline_response_200_4"
                  }
                }
              }
            }
          }
        },
        "post": {
          "tags": [
            "job"
          ],
          "summary": "Create a job",
          "description": "This can only be done by the logged in user with role \"poster\".",
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "description": "token",
              "required": true,
              "style": "simple",
              "explode": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Job"
                }
              }
            },
            "required": true
          },
          "responses": {
            "201": {
              "description": "created",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/inline_response_201_1"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbbiden - Your role is not allowed to realize this operation."
            }
          }
        }
      },
      "/user": {
        "post": {
          "deprecated": true,
          "tags": [
            "user"
          ],
          "summary": "Create user",
          "description": "This can only be done by the logged in user.",
          "operationId": "createUser",
          "requestBody": {
            "description": "Created user object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            },
            "required": true
          },
          "responses": {
            "default": {
              "description": "successful operation"
            }
          }
        }
      },
      "/user/createWithArray": {
        "post": {
          "deprecated": true,
          "tags": [
            "user"
          ],
          "summary": "Creates list of users with given input array",
          "operationId": "createUsersWithArrayInput",
          "requestBody": {
            "$ref": "#/components/requestBodies/UserArray"
          },
          "responses": {
            "default": {
              "description": "successful operation"
            }
          }
        }
      },
      "/user/createWithList": {
        "post": {
          "deprecated": true,
          "tags": [
            "user"
          ],
          "summary": "Creates list of users with given input array",
          "operationId": "createUsersWithListInput",
          "requestBody": {
            "$ref": "#/components/requestBodies/UserArray"
          },
          "responses": {
            "default": {
              "description": "successful operation"
            }
          }
        }
      },
      "/user/login": {
        "get": {
          "deprecated": true,
          "tags": [
            "user"
          ],
          "summary": "Logs user into the system",
          "operationId": "loginUser",
          "parameters": [
            {
              "name": "username",
              "in": "query",
              "description": "The user name for login",
              "required": true,
              "style": "form",
              "explode": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "password",
              "in": "query",
              "description": "The password for login in clear text",
              "required": true,
              "style": "form",
              "explode": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "successful operation",
              "headers": {
                "X-Rate-Limit": {
                  "description": "calls per hour allowed by the user",
                  "style": "simple",
                  "explode": false,
                  "schema": {
                    "type": "integer",
                    "format": "int32"
                  }
                },
                "X-Expires-After": {
                  "description": "date in UTC when token expires",
                  "style": "simple",
                  "explode": false,
                  "schema": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/xml": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "400": {
              "description": "Invalid username/password supplied"
            }
          }
        }
      },
      "/user/logout": {
        "get": {
          "deprecated": true,
          "tags": [
            "user"
          ],
          "summary": "Logs out current logged in user session",
          "operationId": "logoutUser",
          "responses": {
            "default": {
              "description": "successful operation"
            }
          }
        }
      },
      "/user/{username}": {
        "get": {
          "deprecated": true,
          "tags": [
            "user"
          ],
          "summary": "Get user by user name",
          "operationId": "getUserByName",
          "parameters": [
            {
              "name": "username",
              "in": "path",
              "description": "The name that needs to be fetched. Use user1 for testing.",
              "required": true,
              "style": "simple",
              "explode": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/User"
                  }
                },
                "application/xml": {
                  "schema": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            },
            "400": {
              "description": "Invalid username supplied"
            },
            "404": {
              "description": "User not found"
            }
          }
        },
        "put": {
          "deprecated": true,
          "tags": [
            "user"
          ],
          "summary": "Updated user",
          "description": "This can only be done by the logged in user.",
          "operationId": "updateUser",
          "parameters": [
            {
              "name": "username",
              "in": "path",
              "description": "name that need to be updated",
              "required": true,
              "style": "simple",
              "explode": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "description": "Updated user object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            },
            "required": true
          },
          "responses": {
            "400": {
              "description": "Invalid user supplied"
            },
            "404": {
              "description": "User not found"
            }
          }
        },
        "delete": {
          "deprecated": true,
          "tags": [
            "user"
          ],
          "summary": "Delete user",
          "description": "This can only be done by the logged in user.",
          "operationId": "deleteUser",
          "parameters": [
            {
              "name": "username",
              "in": "path",
              "description": "The name that needs to be deleted",
              "required": true,
              "style": "simple",
              "explode": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "400": {
              "description": "Invalid username supplied"
            },
            "404": {
              "description": "User not found"
            }
          }
        }
      }
    },
    "components": {
      "schemas": {
        "Auth": {
          "required": [
            "email",
            "password"
          ],
          "type": "object",
          "properties": {
            "email": {
              "type": "string",
              "default": "eiron@gmail.com"
            },
            "password": {
              "type": "string",
              "default": "eiron123"
            }
          }
        },
        "Category": {
          "required": [
            "title"
          ],
          "type": "object",
          "properties": {
            "_id": {
              "type": "string"
            },
            "title": {
              "type": "string"
            }
          }
        },
        "Job": {
          "required": [
            "category",
            "company",
            "description",
            "location",
            "owner",
            "position",
            "title",
            "type"
          ],
          "type": "object",
          "properties": {
            "_id": {
              "type": "string"
            },
            "title": {
              "type": "string"
            },
            "company": {
              "type": "string"
            },
            "type": {
              "type": "string",
              "enum": [
                "full-time",
                "part-time",
                "freelance"
              ]
            },
            "logo": {
              "type": "string"
            },
            "url": {
              "type": "string"
            },
            "position": {
              "type": "string"
            },
            "location": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "category": {
              "type": "string"
            },
            "createdAt": {
              "type": "string"
            },
            "owner": {
              "type": "string"
            },
            "views": {
              "type": "string"
            }
          }
        },
        "User": {
          "required": [
            "email",
            "lastname",
            "name",
            "password"
          ],
          "type": "object",
          "properties": {
            "_id": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "lastname": {
              "type": "string"
            },
            "email": {
              "type": "string"
            },
            "password": {
              "type": "string"
            },
            "foto": {
              "type": "string"
            },
            "role": {
              "type": "string",
              "enum": [
                "user",
                "poster"
              ]
            }
          },
          "xml": {
            "name": "User"
          }
        },
        "ApiResponse": {
          "type": "object",
          "properties": {
            "code": {
              "type": "integer",
              "format": "int32"
            },
            "type": {
              "type": "string"
            },
            "message": {
              "type": "string"
            }
          }
        },
        "ErrorResponse": {
          "type": "object",
          "properties": {
            "ok": {
              "type": "boolean",
              "default": false
            },
            "msg": {
              "type": "string"
            }
          }
        }
      }
    }
  },
  "apis": ["src/config/swagger-doc.js"]
}